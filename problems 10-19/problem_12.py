# Highly divisible triangular number
# Problem 12

"""
The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number
to have over five hundred divisors?
"""

import math


# I don't need a specific triangle number, I need to iterate throught all
# So it is faster and easier to just sum next natural to previous one


def getTriangleNumber(k):
    """NOT USED
    The formula gives the value of the nth triangular number.

    Demostracion:

    Defino a un numero triangular T como
    T = 1 + 2 + ... +  k
    T = k + (k-1) + ... + 2 + 1

    Sumo ecuaciones

    2T = (k+1) + (k-1+2) + (k-2+3) + ... + (k-1+2) + (k+1) 
    2T = k*(k+1)

    ==> T = (k*(k+1))/2
    """
    return (k*(k+1))/2


def getDivisorsQuantity(number):
    divisors = 1
    # The number itself is a divisor I dont compute
    for n in range(1, int(math.sqrt(number))+1):
        if number % n == 0:
            if n == math.sqrt(number):
                # Add 1 divisor if its the sqrt,
                # because the counterpart will be the same number
                # eg number = 25 -> divisible by 5-> 5*5 so just add 1 divisor
                divisors += 1
            else:
                # Add 2 divisors because of the counterpart.
                # eg number = 100 --> is divisible by 2, is also divisible by50
                # --> 100 = 2 * 50
                divisors += 2

    return divisors


def main():
    triangularNumber = 0
    answer = 0
    n = 0

    while answer == 0:
        n += 1
        triangularNumber += n

        if getDivisorsQuantity(triangularNumber) > 500:
            answer = triangularNumber

    print answer

if __name__ == "__main__":
    main()
